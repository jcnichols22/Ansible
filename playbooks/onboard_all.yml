---
# Step 1: Bootstrap users and SSH keys everywhere
- name: Ensure users and SSH keys exist (all hosts, root only, before facts)
  hosts: all
  become: true
  gather_facts: true
  vars_files:
    - files/users.yml
  roles:
    - role: base

# Step 2: Media Servers (Ubuntu/Debian only)
- name: Onboarding for Media Servers
  hosts: media_servers
  become: true

  pre_tasks:
    - name: Update and upgrade apt packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes
        autoclean: yes
      tags: apt

    - name: Ensure snapd is installed
      ansible.builtin.apt:
        name: snapd
        state: present
      tags: snap

    - name: Check if snap command is available
      ansible.builtin.stat:
        path: /usr/bin/snap
      register: snap_stat

  tasks:
    - name: Upgrade all snap packages
      ansible.builtin.command: snap refresh
      when: snap_stat.stat.exists
      tags: snap

  roles:
    - dotfiles
    - media_server

# Step 3: Workstations (Ubuntu/Debian AND Archcraft)
- name: Onboarding for Workstations
  hosts: workstations
  become: true

  pre_tasks:
    # Ubuntu/Debian setup
    - name: Update and upgrade apt packages (Debian/Ubuntu)
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes
        autoclean: yes
      tags: apt
      when: ansible_os_family == "Debian"

    - name: Ensure snapd is installed (Debian/Ubuntu)
      ansible.builtin.apt:
        name: snapd
        state: present
      tags: snap
      when: ansible_os_family == "Debian"

    # Archcraft setup
    - name: Update all packages (Arch/Archcraft)
      community.general.pacman:
        update_cache: yes
        upgrade: yes
      tags: pacman
      when: ansible_os_family == "Archlinux"

    - name: Ensure snapd is installed (Arch/Archcraft)
      community.general.pacman:
        name: snapd
        state: present
      tags: snap
      when: ansible_os_family == "Archlinux"

    - name: Enable and start snapd.socket (Arch/Archcraft)
      ansible.builtin.systemd:
        name: snapd.socket
        enabled: yes
        state: started
      become: true
      when: ansible_os_family == "Archlinux"

    - name: Ensure /snap symlink exists (Arch/Archcraft)
      ansible.builtin.file:
        src: /var/lib/snapd/snap
        dest: /snap
        state: link
      become: true
      when: ansible_os_family == "Archlinux"

    # COMMON: for both
    - name: Check if snap command is available
      ansible.builtin.stat:
        path: /usr/bin/snap
      register: snap_stat

  tasks:
    - name: Upgrade all snap packages
      ansible.builtin.command: snap refresh
      when: snap_stat.stat.exists
      tags: snap

  roles:
    - dotfiles
    - workstations

# Step 4: All Other Hosts (Ubuntu/Debian only)
- name: Onboarding for All Other Hosts
  hosts: all:!media_servers:!workstations
  become: true

  pre_tasks:
    - name: Update and upgrade apt packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes
        autoclean: yes
      tags: apt

    - name: Ensure snapd is installed
      ansible.builtin.apt:
        name: snapd
        state: present
      tags: snap

    - name: Check if snap command is available
      ansible.builtin.stat:
        path: /usr/bin/snap
      register: snap_stat

  tasks:
    - name: Upgrade all snap packages
      ansible.builtin.command: snap refresh
      when: snap_stat.stat.exists
      tags: snap

  roles:
    - dotfiles
