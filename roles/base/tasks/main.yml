# --- Package Management ---
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  tags: packages

- name: Install required packages
  ansible.builtin.apt:
    name: "{{ required_packages }}"
    state: present
  tags: packages

# --- User Management ---
- name: Ensure users exist
  ansible.builtin.user:
    name: "{{ item.name }}"
    shell: /bin/bash
    state: present
    create_home: yes
    home: "/home/{{ item.name }}"
  loop: "{{ users }}"
  tags: users

- name: Add SSH keys for users
  ansible.builtin.authorized_key:
    user: "{{ item.name }}"
    state: present
    key: "{{ item.ssh_key }}"
  loop: "{{ users }}"
  tags: users

- name: Add users to sudo group
  ansible.builtin.user:
    name: "{{ item.name }}"
    groups: sudo
    append: yes
  loop: "{{ users }}"
  when: item.sudo | default(false)
  tags: sudo

- name: Create sudoers file for users with NOPASSWD
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ item.name }}"
    content: "{{ item.name }} ALL=(ALL) NOPASSWD: ALL\n"
    owner: root
    group: root
    mode: "0440"
    validate: "visudo -cf %s"
  loop: "{{ users }}"
  when: item.nopasswd | default(false)
  tags: sudo

# --- Dotfiles Management ---
- name: Clone dotfiles repo and link .bash_aliases for each user
  block:
    - name: Ensure dotfiles directory exists
      ansible.builtin.file:
        path: "/home/{{ item.name }}/dotfiles"
        state: directory
        owner: "{{ item.name }}"
        group: "{{ item.name }}"
        mode: '0755'
      become: yes
      become_user: "{{ item.name }}"
      loop: "{{ users }}"

    - name: Mark dotfiles directory as safe for git
      ansible.builtin.command:
        cmd: git config --global --add safe.directory /home/{{ item.name }}/dotfiles
      become: yes
      become_user: "{{ item.name }}"
      args:
        creates: "/home/{{ item.name }}/.gitconfig"
      loop: "{{ users }}"

    - name: Clone dotfiles repository
      ansible.builtin.git:
        repo: "{{ dotfiles_repo }}"
        dest: "/home/{{ item.name }}/dotfiles"
        version: main   # <-- Change 'main' to your actual branch if needed
        update: yes
      become: yes
      become_user: "{{ item.name }}"
      loop: "{{ users }}"

    - name: Link .bash_aliases from dotfiles to user home
      ansible.builtin.file:
        src: "/home/{{ item.name }}/dotfiles/.bash_aliases"
        dest: "/home/{{ item.name }}/.bash_aliases"
        state: link
        force: yes
      become: yes
      become_user: "{{ item.name }}"
      loop: "{{ users }}"
  tags: dotfiles