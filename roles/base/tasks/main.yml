# --- Package Management ---
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  tags: packages

- name: Install required packages
  ansible.builtin.apt:
    name: "{{ required_packages }}"
    state: present
  tags: packages

# --- User Management ---
- name: Ensure users exist
  ansible.builtin.user:
    name: "{{ item.name }}"
    shell: /bin/bash
    state: present
    create_home: yes
    home: "/home/{{ item.name }}"
  loop: "{{ users }}"
  tags: users

- name: Add SSH keys for users
  ansible.builtin.authorized_key:
    user: "{{ item.name }}"
    state: present
    key: "{{ item.ssh_key }}"
  loop: "{{ users }}"
  tags: users

- name: Add users to sudo group
  ansible.builtin.user:
    name: "{{ item.name }}"
    groups: sudo
    append: yes
  loop: "{{ users }}"
  when: item.sudo | default(false)
  tags: sudo

- name: Create sudoers file for users with NOPASSWD
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ item.name }}"
    content: "{{ item.name }} ALL=(ALL) NOPASSWD: ALL\n"
    owner: root
    group: root
    mode: "0440"
    validate: "visudo -cf %s"
  loop: "{{ users }}"
  when: item.nopasswd | default(false)
  tags: sudo

# --- Dotfiles Management ---
- name: Ensure home directory exists and is owned by user
  ansible.builtin.file:
    path: "/home/{{ item.name }}"
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: "0755"
  loop: "{{ users }}"
  become: true

# - name: Check if GitHub repo exists
#   ansible.builtin.shell: git ls-remote {{ dotfiles_repo }} HEAD
#   register: repo_check
#   ignore_errors: yes
#   changed_when: false
#   tags: dotfiles

# - name: Fail if repo does not exist on GitHub
#   ansible.builtin.fail:
#     msg: "Repository {{ dotfiles_repo }} does not exist or is inaccessible."
#   when: repo_check.rc != 0
#   tags: dotfiles

- name: Ensure dotfiles repo is present and updated for each user
  ansible.builtin.git:
    repo: "{{ dotfiles_repo }}"
    dest: "/home/{{ item.name }}/dotfiles"
    update: yes
    version: HEAD
    force: no
    accept_hostkey: yes
  become: yes
  become_user: "{{ item.name }}"
  loop: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"
  tags: dotfiles

- name: Ensure correct permissions for each user's dotfiles directory
  ansible.builtin.file:
    path: "/home/{{ item.name }}/dotfiles"
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    recurse: yes
  loop: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"
  tags: dotfiles

- name: Ensure .bash_aliases symlinked from dotfiles
  ansible.builtin.file:
    src: "/home/{{ item.name }}/dotfiles/.bash_aliases"
    dest: "/home/{{ item.name }}/.bash_aliases"
    state: link
    force: yes
  loop: "{{ users }}"
  become: true
  tags: dotfiles
